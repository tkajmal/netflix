{"version":3,"sources":["components/NavBar/NavBar.js","URLS/url.js","URLS/axios.js","components/banner/banner.js","components/RowPost/RowPost.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","apiKey","imageUrl","orginals","actions","romantic","horror","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","console","log","get","then","res","results","counter","setInterval","err","style","backgroundImage","backdrop_path","title","overview","RowPost","props","rowPost","setRowPost","youtubeID","setYoutubeID","url","catch","map","obj","onClick","id","length","isSmall","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.075ef9a7.chunk.js","sourcesContent":["import React from 'react'\nimport './NavBar.css'\nfunction NavBar() {\n    return (\n        <div className=\"navbar\">\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"NetFlix\" />\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />\n        </div>\n    )\n}\n\nexport default NavBar\n","export const baseUrl = 'https://api.themoviedb.org/3';\nexport const apiKey = '4300af89d122f216202ffb739ed268be';\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';\nexport const orginals = `discover/tv?api_key=${apiKey}&with_networks=213`;\nexport const actions = `discover/movie?api_key=${apiKey}&with_genres=28`;\nexport const romantic = `discover/movie?api_key=${apiKey}&with_genres=99`;\nexport const horror = `discover/movie?api_key=${apiKey}&with_genres=27`;\n\n","import axios from 'axios';\nimport {baseUrl} from './url'\n\nconst instance = axios.create({\n    baseURL: baseUrl\n  });\n\n  export default instance","import React, { useEffect, usemovie, useState } from 'react'\nimport './banner.css'\nimport axios from '../../URLS/axios';\nimport { apiKey, imageUrl } from '../../URLS/url'\n\n\nfunction Banner() {\n    const [movie, setMovie] = useState()\n    useEffect(() => {\n        console.log('test')\n        axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${apiKey}&language=en-US`).then(\n            res => {\n                console.log(res['data'].results[0]);\n                let counter = 0;\n                setInterval(() => {\n                    if (counter < 20) {\n                        counter = counter + 1\n                    } else {\n                        counter = 0;\n                    }\n                    setMovie(res['data'].results[counter])\n                }, 5000)\n\n            }, err => {\n                console.log(err)\n            }\n        )\n    }, [])\n    return (\n        <div style={{ backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : ''})` }}\n            className='banner'>\n            <div className='content' >\n                <h1 className='title'>{movie ? movie.title : ''}  </h1>\n                <div className='banner_buttons' >\n                    <button className='button' >Play</button>\n                    <button className='button' >My list</button>\n                </div>\n                <h1 className='description'>{movie ? movie.overview : ''}</h1>\n            </div>\n            <div className=\"fade_bottom\"></div>\n        </div>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react'\nimport axios from '../../URLS/axios';\nimport { imageUrl, apiKey } from '../../URLS/url'\nimport './RowPost.css'\nimport Youtube from 'react-youtube'\nfunction RowPost(props) {\n    const [rowPost, setRowPost] = useState([]);\n    const [youtubeID, setYoutubeID] = useState()\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n        }\n    }\n    useEffect(() => {\n        axios.get(props.url).then(\n            res => {\n                console.log(res);\n                setRowPost(res['data'].results)\n            }\n        ).catch(\n            err => {\n                console.log(err)\n            }\n        )\n    }, [])\n\n    const playVideo = (id) => {\n        console.log(id)\n        // setYoutubeID(id)\n        axios.get(`movie/${id}/videos?api_key=${apiKey}&language=en-US`).then(\n            res => {\n                console.log(res['data'].results[0]['key']);\n                if (res['data'].results.length > 0) {\n                    setYoutubeID(res['data'].results[0]['key']);\n                } else {\n                    setYoutubeID(399566);\n                }\n            }\n        ).catch(\n            err => {\n                console.log(err)\n            }\n        )\n    }\n    return (\n        <div className='row'>\n            <h2>{props.title}</h2>\n            <div className='posters'>\n                {\n                    rowPost.map(\n                        obj => {\n                            return <img onClick={() => playVideo(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} alt='poster' src={`${imageUrl + obj.backdrop_path}`} />\n                        }\n                    )\n                }\n                {/* <img className='poster' alt='poster' src='https://images.squarespace-cdn.com/content/v1/59232e19579fb3fa44a693c2/1589212826160-UM9PEPGOS3OJPR0FJ81X/ke17ZwdGBToddI8pDm48kHZUaJeKzodyg_sXWBMxNTdZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpxCBUU7B-_SAG1kGvCwYgmUjQXvn8_OJjtz3K1llMQBa1MPsuSXPSY3X-tgg78M7lI/SKOyqL1qFLIhbK6ho2lB-696x975.jpg?format=1500w' /> */}\n            </div>\n         { youtubeID &&  <Youtube videoId={youtubeID} opts={opts} />} \n        </div>\n    )\n}\n\nexport default RowPost\n","import './App.css';\nimport React from 'react';\nimport Navbar from './components/NavBar/NavBar'\nimport Banner from './components/banner/banner'\nimport RowPost from './components/RowPost/RowPost';\nimport {actions,orginals,romantic,horror} from './URLS/url'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Navbar></Navbar>\n     <Banner></Banner>\n     <RowPost url={orginals} title='Films' isSmall={false}/>\n     <RowPost url={actions} title='Action' isSmall={true}/>\n     <RowPost url={romantic} title='Romatic Movies' isSmall={true}/>\n     <RowPost url={horror} title='Horror Movies' isSmall={true}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}